package:
  name: ca-certificates
  version: 20220614
  epoch: 0
  description: "CA certificates from the Mozilla trusted root program"
  target-architecture:
    - all
  copyright:
    - paths:
      - "*"
      attestation: TODO
      license: MPL-2.0 AND MIT
  dependencies:
    runtime:

environment:
  contents:
    repositories:
      - https://mirrors.edge.kernel.org/alpine/edge/main
      - https://storage.googleapis.com/disaster-exercise-wolfi-production-registry-destination/bootstrap/stage1
    keyring:
      - /usr/share/apk/keys/x86_64/alpine-devel@lists.alpinelinux.org-4a6a0840.rsa.pub
      - /usr/share/apk/keys/x86_64/alpine-devel@lists.alpinelinux.org-5261cecb.rsa.pub
      - /usr/share/apk/keys/x86_64/alpine-devel@lists.alpinelinux.org-6165ee59.rsa.pub
      - /usr/share/apk/keys/aarch64/alpine-devel@lists.alpinelinux.org-58199dcc.rsa.pub
      - /usr/share/apk/keys/aarch64/alpine-devel@lists.alpinelinux.org-616ae350.rsa.pub
      - /usr/share/apk/keys/armv7/alpine-devel@lists.alpinelinux.org-524d27bb.rsa.pub
      - /usr/share/apk/keys/armv7/alpine-devel@lists.alpinelinux.org-616adfeb.rsa.pub
      - https://storage.googleapis.com/disaster-exercise-wolfi-production-registry-destination/bootstrap/stage1/wolfi-signing.rsa.pub
    packages:
      - alpine-baselayout
      - busybox
      - perl
      - build-base
      - ca-certificates-bundle
      - cross-gcc-stage1
      - cross-binutils-stage1
      - cross-glibc-stage1
      - cross-linux-headers
      - cross-openssl

pipeline:
  - uses: fetch
    with:
      uri: https://gitlab.alpinelinux.org/alpine/ca-certificates/-/archive/${{package.version}}/ca-certificates-${{package.version}}.tar.gz
      expected-sha256: de497e371819f5dd2ad0764e89856fa674e3561d5f8003d79900c983d1075989
  - runs: |
      make CC="${{cross.triplet.gnu.glibc}}-gcc"
  - runs: |
      make install DESTDIR="${{targets.destdir}}"

      (
        echo "# Automatically generated by ${{package.name}}-${{package.version}}-r${{package.epoch}}"
        echo "# Do not edit."
        cd "${{targets.destdir}}"/usr/share/ca-certificates
        find . -name '*.crt' | sort | cut -b3-
      ) > "${{targets.destdir}}"/etc/ca-certificates.conf

      for i in $(ls *.crt | sort); do
        cat "$i"
        printf "\n"
      done > "${{targets.destdir}}"/etc/ssl/certs/ca-certificates.crt

      mkdir -p "${{targets.destdir}}"/etc/apk/protected_paths.d
      cat > "${{targets.destdir}}"/etc/apk/protected_paths.d/ca-certificates.list <<-EOF
        -etc/ssl/certs/ca-certificates.crt
        -etc/ssl/certs/ca-cert-*.pem
        -etc/ssl/certs/[0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f].[r0-9]*
      EOF

      cat > "${{targets.destdir}}"/etc/ca-certificates/update.d/certhash <<-EOF
        #!/bin/sh
        exec /usr/bin/c_rehash /etc/ssl/certs
      EOF

      chmod +x "${{targets.destdir}}"/etc/ca-certificates/update.d/certhash

subpackages:
  - name: "ca-certificates-bundle"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/etc/ssl/certs
          mv "${{targets.destdir}}"/etc/ssl/certs/ca-certificates.crt "${{targets.subpkgdir}}"/etc/ssl/certs
          ln -s certs/ca-certificates.crt "${{targets.subpkgdir}}"/etc/ssl/cert.pem
